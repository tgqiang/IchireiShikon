/*
 * The Configurable script is a critical component of the game. It stores all required
 * constants/attributes/references needed by the game system. Due to its nature, only one instance of this
 * script is needed in the game.
 * 
 * This script is usually attached to the EventSystem object.
 */

// Required things to maintain //
/*
 * Configurable.COLLIDER_LEFT/RIGHT/TOP/BOTTOM:
 * --> these are set as constants due to use of 'switch' statements.
 * --> should the underlying Tile prefab have the neighbour-detection collider names changed, please change these constants to match too.
 * 
 * Everything else that is visible in the Unity Editor
 */


/*
 * SoulPool and SpiritPool scripts are used to handle Soul/Spirit spawning and destruction.
 *
 * These scripts are attached to a standalone GameObject, typically named as "ObjectPool".
 */
// Required things to maintain //
/*
 * SoulPool.quantity, SpiritPool.quantity (in Scene GameObject)
 *     --> Note that this should at least be greater or equal to Configurable.instance.MIN_OBJECT_POOL_QUANTITY
 * SoulPool.prefabs (in Scene GameObject)
 * SpiritPool.prefabs (in Scene GameObject)
 */


/*
 * Every game level/scene requires a single TileManager object,
 * which manages state changes to every single tile in the game level/scene
 * (by purification, tainting, etc).
 * This script is usually attached to the EventSystem object.
 * 
 * Also note that due to this requirement, the TileManager script should always
 * be executed first, which can be configured in the Script Execution Order.
 */

// Required things to maintain //
/*
 * TileManager script, attached to a GameObject in the scene, typically the EventSystem.
 * TileManager.tileSprites: this array contains 3 sprites, see Configurable.instance.<___>_TILE_NAME for the expected names of the sprites.
 *     --> In tandem, you need to configure this array in the TileManager prefab.
 * TileManager.InitializeTileManagerForRequiredClasses(): if any additional classes require a *static* reference to a TileManager, do the initialization in this function.
 */


/*
 * Every tile in the game level/scene shares a single TileHighlighter object.
 * The TileHighlighter will highlight a tile that the player is currently hovering
 * on, if it is vacant. This highlight shows whenever the player is
 * dragging-and-dropping a Soul/Spirit around in the game level/scene.
 * 
 * This script is attached to a standalone GameObject, typically named as
 * "TileHighlighter".
 */

// Required things to maintain //
/*
 * TileHighlighter script, attached to a GameObject named as "TileHighlighter"
 */